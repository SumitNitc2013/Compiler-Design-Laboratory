decl
	integer readq(queue &q);
	integer printq(queue &q);
	queue merge(queue &p,&q);

enddecl

integer readq(queue &q)
{
	decl
		integer x,n,i;
	enddecl

	begin
		read(n);
		i=0;
		while(i<n) do
			read(x);
			enque(q,x);
			i=i+1;
		endwhile;
		return 1;
	end
}

integer printq(queue &q)
{
	decl
		integer x;
	enddecl
	begin
		x=deque(q);
		while(x!=0) do
			write(x);
			x=deque(q);
		endwhile;
		return 1;
	end
}

queue merge(queue &p,&q)
{
	decl
		integer x,flag,f,g;
		queue r;
	enddecl

	begin
		flag=1;
		f=0;
		g=0;
		while(f!=1 && g!=1) do
			if(flag==1) then
				x=deque(q);
				if(x!=0) then
					enque(r,x);
				else
					f=1;
				endif;

				flag=2;
			endif;

			if(flag==2) then
				x=deque(p);
				if(x!=0) then
					enque(r,x);
				else
					g=1;
				endif;

				flag=1;
			endif;
		endwhile;
	return r;
	end
}

integer main()
{
	decl
		integer t;
		queue q1,q2,q3;
	enddecl

	begin
		t=readq(q1);
		t=readq(q2);
		q3=merge(q1,q2);
		t=printq(q3);
		return 0;
	end
}
