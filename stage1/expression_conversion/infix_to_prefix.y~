%{

#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define YYSTYPE char*

int pos=0;

%}

%token DIGIT
%left '+' '-'
%left '*' '/'


%%

start : expr '\n'		{printf("%s\n",$1);exit(1);}
      ;

expr: expr '+' expr     {char *temp = (char*)malloc(100*sizeof(char));$$=temp;strcpy(temp,"+ ");strcat(temp,$1);strcat(temp," ");strcat(temp,$3);}
    | expr '-' expr     {char *temp = (char*)malloc(100*sizeof(char));$$=temp;strcpy(temp,"- ");strcat(temp,$1);strcat(temp," ");strcat(temp,$3);}
    | expr '*' expr     {char *temp = (char*)malloc(100*sizeof(char));$$=temp;strcpy(temp,"* ");strcat(temp,$1);strcat(temp," ");strcat(temp,$3);}
    | expr '/' expr     {char *temp = (char*)malloc(100*sizeof(char));$$=temp;strcpy(temp,"/ ");strcat(temp,$1);strcat(temp," ");strcat(temp,$3);}
    | '('expr')'		{$$ = $2;}
    | DIGIT             {$$=$1;}
    ;

%%

yyerror(char const *s)
{
    printf("yyerror %s\n",s);
}

yylex(){
    char c;
    c = getchar();
    if(isdigit(c)){
        pos++;
        yylval= (char*)malloc(100*sizeof(char));
        yylval[0]=c;
        yylval[1]='\0';
        return DIGIT;
    }
    else if(c == ' '){
        yylex();        
    }
    else {
        return c;
    }
}

main()
{
	yyparse();
	return 1;
}

